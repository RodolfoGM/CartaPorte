//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CARTAPORTE.ServiceReferenceFC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="resultado", Namespace="http://schemas.datacontract.org/2004/07/cfdiWcfEmisionServicio.Clases")]
    [System.SerializableAttribute()]
    public partial class resultado : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadenaOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditoActualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditoDisponibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditoFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmisorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacturaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDF64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadenaOriginal {
            get {
                return this.CadenaOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CadenaOriginalField, value) != true)) {
                    this.CadenaOriginalField = value;
                    this.RaisePropertyChanged("CadenaOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditoActual {
            get {
                return this.CreditoActualField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditoActualField, value) != true)) {
                    this.CreditoActualField = value;
                    this.RaisePropertyChanged("CreditoActual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditoDisponible {
            get {
                return this.CreditoDisponibleField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditoDisponibleField, value) != true)) {
                    this.CreditoDisponibleField = value;
                    this.RaisePropertyChanged("CreditoDisponible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditoFinal {
            get {
                return this.CreditoFinalField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditoFinalField, value) != true)) {
                    this.CreditoFinalField = value;
                    this.RaisePropertyChanged("CreditoFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emisor {
            get {
                return this.EmisorField;
            }
            set {
                if ((object.ReferenceEquals(this.EmisorField, value) != true)) {
                    this.EmisorField = value;
                    this.RaisePropertyChanged("Emisor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorModule {
            get {
                return this.ErrorModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorModuleField, value) != true)) {
                    this.ErrorModuleField = value;
                    this.RaisePropertyChanged("ErrorModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacturaId {
            get {
                return this.FacturaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FacturaIdField, value) != true)) {
                    this.FacturaIdField = value;
                    this.RaisePropertyChanged("FacturaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Folio {
            get {
                return this.FolioField;
            }
            set {
                if ((object.ReferenceEquals(this.FolioField, value) != true)) {
                    this.FolioField = value;
                    this.RaisePropertyChanged("Folio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDF64 {
            get {
                return this.PDF64Field;
            }
            set {
                if ((object.ReferenceEquals(this.PDF64Field, value) != true)) {
                    this.PDF64Field = value;
                    this.RaisePropertyChanged("PDF64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receptor {
            get {
                return this.ReceptorField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceptorField, value) != true)) {
                    this.ReceptorField = value;
                    this.RaisePropertyChanged("Receptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serie {
            get {
                return this.SerieField;
            }
            set {
                if ((object.ReferenceEquals(this.SerieField, value) != true)) {
                    this.SerieField = value;
                    this.RaisePropertyChanged("Serie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uuid {
            get {
                return this.UuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UuidField, value) != true)) {
                    this.UuidField = value;
                    this.RaisePropertyChanged("Uuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Validate {
            get {
                return this.ValidateField;
            }
            set {
                if ((this.ValidateField.Equals(value) != true)) {
                    this.ValidateField = value;
                    this.RaisePropertyChanged("Validate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="respuestaXml", Namespace="http://schemas.datacontract.org/2004/07/cfdiWcfEmisionServicio.Clases")]
    [System.SerializableAttribute()]
    public partial class respuestaXml : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadenaOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacturaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacturaIdOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MontoOperacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MontoRetencionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RechazoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RfcEmisorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RfcReceptorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelloField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Total1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Total2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UuidOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlAcuseCancelacionCfdiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadenaOriginal {
            get {
                return this.CadenaOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.CadenaOriginalField, value) != true)) {
                    this.CadenaOriginalField = value;
                    this.RaisePropertyChanged("CadenaOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstatusId {
            get {
                return this.EstatusIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EstatusIdField, value) != true)) {
                    this.EstatusIdField = value;
                    this.RaisePropertyChanged("EstatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacturaId {
            get {
                return this.FacturaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FacturaIdField, value) != true)) {
                    this.FacturaIdField = value;
                    this.RaisePropertyChanged("FacturaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacturaIdOriginal {
            get {
                return this.FacturaIdOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.FacturaIdOriginalField, value) != true)) {
                    this.FacturaIdOriginalField = value;
                    this.RaisePropertyChanged("FacturaIdOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Folio {
            get {
                return this.FolioField;
            }
            set {
                if ((object.ReferenceEquals(this.FolioField, value) != true)) {
                    this.FolioField = value;
                    this.RaisePropertyChanged("Folio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MontoOperacion {
            get {
                return this.MontoOperacionField;
            }
            set {
                if ((object.ReferenceEquals(this.MontoOperacionField, value) != true)) {
                    this.MontoOperacionField = value;
                    this.RaisePropertyChanged("MontoOperacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MontoRetencion {
            get {
                return this.MontoRetencionField;
            }
            set {
                if ((object.ReferenceEquals(this.MontoRetencionField, value) != true)) {
                    this.MontoRetencionField = value;
                    this.RaisePropertyChanged("MontoRetencion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qr {
            get {
                return this.QrField;
            }
            set {
                if ((object.ReferenceEquals(this.QrField, value) != true)) {
                    this.QrField = value;
                    this.RaisePropertyChanged("Qr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RechazoId {
            get {
                return this.RechazoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RechazoIdField, value) != true)) {
                    this.RechazoIdField = value;
                    this.RaisePropertyChanged("RechazoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RfcEmisor {
            get {
                return this.RfcEmisorField;
            }
            set {
                if ((object.ReferenceEquals(this.RfcEmisorField, value) != true)) {
                    this.RfcEmisorField = value;
                    this.RaisePropertyChanged("RfcEmisor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RfcReceptor {
            get {
                return this.RfcReceptorField;
            }
            set {
                if ((object.ReferenceEquals(this.RfcReceptorField, value) != true)) {
                    this.RfcReceptorField = value;
                    this.RaisePropertyChanged("RfcReceptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sello {
            get {
                return this.SelloField;
            }
            set {
                if ((object.ReferenceEquals(this.SelloField, value) != true)) {
                    this.SelloField = value;
                    this.RaisePropertyChanged("Sello");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Serie {
            get {
                return this.SerieField;
            }
            set {
                if ((object.ReferenceEquals(this.SerieField, value) != true)) {
                    this.SerieField = value;
                    this.RaisePropertyChanged("Serie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total1 {
            get {
                return this.Total1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Total1Field, value) != true)) {
                    this.Total1Field = value;
                    this.RaisePropertyChanged("Total1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Total2 {
            get {
                return this.Total2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Total2Field, value) != true)) {
                    this.Total2Field = value;
                    this.RaisePropertyChanged("Total2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uuid {
            get {
                return this.UuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UuidField, value) != true)) {
                    this.UuidField = value;
                    this.RaisePropertyChanged("Uuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UuidOriginal {
            get {
                return this.UuidOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.UuidOriginalField, value) != true)) {
                    this.UuidOriginalField = value;
                    this.RaisePropertyChanged("UuidOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Validate {
            get {
                return this.ValidateField;
            }
            set {
                if ((this.ValidateField.Equals(value) != true)) {
                    this.ValidateField = value;
                    this.RaisePropertyChanged("Validate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xml {
            get {
                return this.XmlField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlField, value) != true)) {
                    this.XmlField = value;
                    this.RaisePropertyChanged("Xml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlAcuseCancelacionCfdi {
            get {
                return this.XmlAcuseCancelacionCfdiField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlAcuseCancelacionCfdiField, value) != true)) {
                    this.XmlAcuseCancelacionCfdiField = value;
                    this.RaisePropertyChanged("XmlAcuseCancelacionCfdi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="respuestaXml_ConusltaFacturaId", Namespace="http://schemas.datacontract.org/2004/07/cfdiWcfEmisionServicio.Clases")]
    [System.SerializableAttribute()]
    public partial class respuestaXml_ConusltaFacturaId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FacturaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDesc {
            get {
                return this.ErrorDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescField, value) != true)) {
                    this.ErrorDescField = value;
                    this.RaisePropertyChanged("ErrorDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FacturaId {
            get {
                return this.FacturaIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FacturaIdField, value) != true)) {
                    this.FacturaIdField = value;
                    this.RaisePropertyChanged("FacturaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Validate {
            get {
                return this.ValidateField;
            }
            set {
                if ((this.ValidateField.Equals(value) != true)) {
                    this.ValidateField = value;
                    this.RaisePropertyChanged("Validate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceFC.IDetecno")]
    public interface IDetecno {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Prueba", ReplyAction="http://tempuri.org/IDetecno/PruebaResponse")]
        string Prueba(string valor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Prueba", ReplyAction="http://tempuri.org/IDetecno/PruebaResponse")]
        System.Threading.Tasks.Task<string> PruebaAsync(string valor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteGenerar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteGenerarResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado ComprobanteGenerar(string licencia, string cerBytes, string keyBytes, string passBytes, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteGenerar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteGenerarResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteGenerarAsync(string licencia, string cerBytes, string keyBytes, string passBytes, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteCancelar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteCancelarResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado ComprobanteCancelar(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteCancelar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteCancelarResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteCancelarAsync(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_CancelarUUID", ReplyAction="http://tempuri.org/IDetecno/Comprobante_CancelarUUIDResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado Comprobante_CancelarUUID(string licencia, string UUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_CancelarUUID", ReplyAction="http://tempuri.org/IDetecno/Comprobante_CancelarUUIDResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_CancelarUUIDAsync(string licencia, string UUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscarResponse")]
        CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscar(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscarResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscarAsync(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_BuscarPdf", ReplyAction="http://tempuri.org/IDetecno/Comprobante_BuscarPdfResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado Comprobante_BuscarPdf(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_BuscarPdf", ReplyAction="http://tempuri.org/IDetecno/Comprobante_BuscarPdfResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_BuscarPdfAsync(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteGenerarRetencion", ReplyAction="http://tempuri.org/IDetecno/ComprobanteGenerarRetencionResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado ComprobanteGenerarRetencion(string licencia, string cerBytes, string keyBytes, string passBytes, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteGenerarRetencion", ReplyAction="http://tempuri.org/IDetecno/ComprobanteGenerarRetencionResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteGenerarRetencionAsync(string licencia, string cerBytes, string keyBytes, string passBytes, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscarRetencion", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscarRetencionResponse")]
        CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscarRetencion(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscarRetencion", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscarRetencionResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscarRetencionAsync(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_BuscarPdfRetencion", ReplyAction="http://tempuri.org/IDetecno/Comprobante_BuscarPdfRetencionResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado Comprobante_BuscarPdfRetencion(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_BuscarPdfRetencion", ReplyAction="http://tempuri.org/IDetecno/Comprobante_BuscarPdfRetencionResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_BuscarPdfRetencionAsync(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteRetencionCancelar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteRetencionCancelarResponse")]
        CARTAPORTE.ServiceReferenceFC.resultado ComprobanteRetencionCancelar(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteRetencionCancelar", ReplyAction="http://tempuri.org/IDetecno/ComprobanteRetencionCancelarResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteRetencionCancelarAsync(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteGenerar33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteGenerar33Response")]
        CARTAPORTE.ServiceReferenceFC.resultado ComprobanteGenerar33(string licencia, string cerBytes, string keyBytes, string passBytes, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteGenerar33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteGenerar33Response")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteGenerar33Async(string licencia, string cerBytes, string keyBytes, string passBytes, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscarUUID33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscarUUID33Response")]
        CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscarUUID33(string licencia, string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscarUUID33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscarUUID33Response")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscarUUID33Async(string licencia, string uuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscar33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscar33Response")]
        CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscar33(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteBuscar33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteBuscar33Response")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscar33Async(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_BuscarPdf33", ReplyAction="http://tempuri.org/IDetecno/Comprobante_BuscarPdf33Response")]
        CARTAPORTE.ServiceReferenceFC.resultado Comprobante_BuscarPdf33(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_BuscarPdf33", ReplyAction="http://tempuri.org/IDetecno/Comprobante_BuscarPdf33Response")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_BuscarPdf33Async(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteCancelar33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteCancelar33Response")]
        CARTAPORTE.ServiceReferenceFC.resultado ComprobanteCancelar33(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/ComprobanteCancelar33", ReplyAction="http://tempuri.org/IDetecno/ComprobanteCancelar33Response")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteCancelar33Async(string licencia, string facturaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_CancelarUUID33", ReplyAction="http://tempuri.org/IDetecno/Comprobante_CancelarUUID33Response")]
        CARTAPORTE.ServiceReferenceFC.resultado Comprobante_CancelarUUID33(string licencia, string UUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Comprobante_CancelarUUID33", ReplyAction="http://tempuri.org/IDetecno/Comprobante_CancelarUUID33Response")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_CancelarUUID33Async(string licencia, string UUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Consultafactura_ID", ReplyAction="http://tempuri.org/IDetecno/Consultafactura_IDResponse")]
        CARTAPORTE.ServiceReferenceFC.respuestaXml_ConusltaFacturaId Consultafactura_ID(string licencia, string Serie, string Folio, string RfcEmisor, string FechaSolicitud);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDetecno/Consultafactura_ID", ReplyAction="http://tempuri.org/IDetecno/Consultafactura_IDResponse")]
        System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml_ConusltaFacturaId> Consultafactura_IDAsync(string licencia, string Serie, string Folio, string RfcEmisor, string FechaSolicitud);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDetecnoChannel : CARTAPORTE.ServiceReferenceFC.IDetecno, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DetecnoClient : System.ServiceModel.ClientBase<CARTAPORTE.ServiceReferenceFC.IDetecno>, CARTAPORTE.ServiceReferenceFC.IDetecno {
        
        public DetecnoClient() {
        }
        
        public DetecnoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DetecnoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DetecnoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DetecnoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Prueba(string valor) {
            return base.Channel.Prueba(valor);
        }
        
        public System.Threading.Tasks.Task<string> PruebaAsync(string valor) {
            return base.Channel.PruebaAsync(valor);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado ComprobanteGenerar(string licencia, string cerBytes, string keyBytes, string passBytes, string xml) {
            return base.Channel.ComprobanteGenerar(licencia, cerBytes, keyBytes, passBytes, xml);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteGenerarAsync(string licencia, string cerBytes, string keyBytes, string passBytes, string xml) {
            return base.Channel.ComprobanteGenerarAsync(licencia, cerBytes, keyBytes, passBytes, xml);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado ComprobanteCancelar(string licencia, string facturaId) {
            return base.Channel.ComprobanteCancelar(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteCancelarAsync(string licencia, string facturaId) {
            return base.Channel.ComprobanteCancelarAsync(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado Comprobante_CancelarUUID(string licencia, string UUID) {
            return base.Channel.Comprobante_CancelarUUID(licencia, UUID);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_CancelarUUIDAsync(string licencia, string UUID) {
            return base.Channel.Comprobante_CancelarUUIDAsync(licencia, UUID);
        }
        
        public CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscar(string licencia, string facturaId) {
            return base.Channel.ComprobanteBuscar(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscarAsync(string licencia, string facturaId) {
            return base.Channel.ComprobanteBuscarAsync(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado Comprobante_BuscarPdf(string licencia, string facturaId) {
            return base.Channel.Comprobante_BuscarPdf(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_BuscarPdfAsync(string licencia, string facturaId) {
            return base.Channel.Comprobante_BuscarPdfAsync(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado ComprobanteGenerarRetencion(string licencia, string cerBytes, string keyBytes, string passBytes, string xml) {
            return base.Channel.ComprobanteGenerarRetencion(licencia, cerBytes, keyBytes, passBytes, xml);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteGenerarRetencionAsync(string licencia, string cerBytes, string keyBytes, string passBytes, string xml) {
            return base.Channel.ComprobanteGenerarRetencionAsync(licencia, cerBytes, keyBytes, passBytes, xml);
        }
        
        public CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscarRetencion(string licencia, string facturaId) {
            return base.Channel.ComprobanteBuscarRetencion(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscarRetencionAsync(string licencia, string facturaId) {
            return base.Channel.ComprobanteBuscarRetencionAsync(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado Comprobante_BuscarPdfRetencion(string licencia, string facturaId) {
            return base.Channel.Comprobante_BuscarPdfRetencion(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_BuscarPdfRetencionAsync(string licencia, string facturaId) {
            return base.Channel.Comprobante_BuscarPdfRetencionAsync(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado ComprobanteRetencionCancelar(string licencia, string facturaId) {
            return base.Channel.ComprobanteRetencionCancelar(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteRetencionCancelarAsync(string licencia, string facturaId) {
            return base.Channel.ComprobanteRetencionCancelarAsync(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado ComprobanteGenerar33(string licencia, string cerBytes, string keyBytes, string passBytes, string xml) {
            return base.Channel.ComprobanteGenerar33(licencia, cerBytes, keyBytes, passBytes, xml);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteGenerar33Async(string licencia, string cerBytes, string keyBytes, string passBytes, string xml) {
            return base.Channel.ComprobanteGenerar33Async(licencia, cerBytes, keyBytes, passBytes, xml);
        }
        
        public CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscarUUID33(string licencia, string uuid) {
            return base.Channel.ComprobanteBuscarUUID33(licencia, uuid);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscarUUID33Async(string licencia, string uuid) {
            return base.Channel.ComprobanteBuscarUUID33Async(licencia, uuid);
        }
        
        public CARTAPORTE.ServiceReferenceFC.respuestaXml ComprobanteBuscar33(string licencia, string facturaId) {
            return base.Channel.ComprobanteBuscar33(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml> ComprobanteBuscar33Async(string licencia, string facturaId) {
            return base.Channel.ComprobanteBuscar33Async(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado Comprobante_BuscarPdf33(string licencia, string facturaId) {
            return base.Channel.Comprobante_BuscarPdf33(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_BuscarPdf33Async(string licencia, string facturaId) {
            return base.Channel.Comprobante_BuscarPdf33Async(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado ComprobanteCancelar33(string licencia, string facturaId) {
            return base.Channel.ComprobanteCancelar33(licencia, facturaId);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> ComprobanteCancelar33Async(string licencia, string facturaId) {
            return base.Channel.ComprobanteCancelar33Async(licencia, facturaId);
        }
        
        public CARTAPORTE.ServiceReferenceFC.resultado Comprobante_CancelarUUID33(string licencia, string UUID) {
            return base.Channel.Comprobante_CancelarUUID33(licencia, UUID);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.resultado> Comprobante_CancelarUUID33Async(string licencia, string UUID) {
            return base.Channel.Comprobante_CancelarUUID33Async(licencia, UUID);
        }
        
        public CARTAPORTE.ServiceReferenceFC.respuestaXml_ConusltaFacturaId Consultafactura_ID(string licencia, string Serie, string Folio, string RfcEmisor, string FechaSolicitud) {
            return base.Channel.Consultafactura_ID(licencia, Serie, Folio, RfcEmisor, FechaSolicitud);
        }
        
        public System.Threading.Tasks.Task<CARTAPORTE.ServiceReferenceFC.respuestaXml_ConusltaFacturaId> Consultafactura_IDAsync(string licencia, string Serie, string Folio, string RfcEmisor, string FechaSolicitud) {
            return base.Channel.Consultafactura_IDAsync(licencia, Serie, Folio, RfcEmisor, FechaSolicitud);
        }
    }
}
